package model;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class EnrollDAO {
	SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
	DecimalFormat df=new DecimalFormat("#,###원");
	
	
	public JSONArray slist(String lcode) {
		JSONArray array=new JSONArray();
		
		try {
			String sql="select * from estu where lcode =?";
			PreparedStatement ps=Data.CON.prepareStatement(sql);
			ps.setString(1, lcode);
			ResultSet rs=ps.executeQuery();
			while(rs.next()) {
				JSONObject obj=new JSONObject();
				obj.put("lcode", rs.getString("lcode"));
				obj.put("sname", rs.getString("sname"));
				obj.put("scode", rs.getString("scode"));
				obj.put("dept", rs.getString("dept"));
				obj.put("year", rs.getString("year"));
				obj.put("grade", rs.getInt("grade"));
				obj.put("capacity", rs.getInt("capacity"));
				obj.put("persons", rs.getInt("persons"));
				String edate=sdf.format(rs.getDate("edate"));
				obj.put("edate",edate);
				array.add(obj);
			}
		} catch (Exception e) {
			System.out.println("강좌몰고 :"+e.toString());
		}
		
		
		return array;
		
	}
	
	
	
	//수강신청 
			public void delete(String lcode,String scode) {
				try {
					String sql="delete from enrollments where lcode=? and scode=?";
					PreparedStatement ps=Data.CON.prepareStatement(sql);
					ps.setString(1, lcode);
					ps.setString(2, scode);
					ps.execute();
					sql="update courses set persons=persons-1 where lcode=?";
					ps=Data.CON.prepareStatement(sql);
					ps.setString(1, lcode);
					ps.execute();
				} catch (Exception e) {
					System.out.println("수강취소"+e.toString());
				}
			}
	
	//수강신청 
		public void insert(String lcode,String scode) {
			try {
				String sql="insert into enrollments(lcode,scode) values(?,?)";
				PreparedStatement ps=Data.CON.prepareStatement(sql);
				ps.setString(1, lcode);
				ps.setString(2, scode);
				ps.execute();
				sql="update courses set persons=persons+1 where lcode=?";
				ps=Data.CON.prepareStatement(sql);
				ps.setString(1, lcode);
				ps.execute();
			} catch (Exception e) {
				System.out.println("수강신청: "+e.toString());
			}
		}
	
	
	//중복체크 
	public int check(String lcode,String scode) {
		int count=0;
		try {
			String sql="select count(*) cnt from enrollments where lcode=? and scode=?";
			PreparedStatement ps=Data.CON.prepareStatement(sql);
			ps.setString(1, lcode);
			ps.setString(2, scode);
			ResultSet rs=ps.executeQuery();
			if(rs.next()) count=rs.getInt("cnt");
					
		} catch (Exception e) {
			System.out.println("수강신청중복체크:"+e.toString());
		}
		return count;
	}
	
	//강의목록
	public JSONArray alist() {
		JSONArray  array=new JSONArray();
		
		try {
			String sql="select * from cou";
			PreparedStatement ps=Data.CON.prepareStatement(sql);
			ResultSet rs=ps.executeQuery();
			while(rs.next()) {
				JSONObject obj=new JSONObject();
				obj.put("lcode", rs.getString("lcode"));
				obj.put("lname", rs.getString("lname"));
				obj.put("pname", rs.getString("pname"));
				obj.put("persons", rs.getInt("persons"));
				obj.put("capacity", rs.getInt("capacity"));	
				obj.put("room", rs.getString("room"));
				obj.put("hours", rs.getInt("hours"));
				array.add(obj);
			}	
			
		} catch (Exception e) {
			System.out.println("강의목록 :"+e.toString());
		}
		return array;
	}
	
	
	//특정학생의 수간신청 목록
	public JSONArray clist(String scode) {
		JSONArray array=new JSONArray();
		
		try {
			String sql="select * from ecou where scode =?";
			PreparedStatement ps=Data.CON.prepareStatement(sql);
			ps.setString(1, scode);
			ResultSet rs=ps.executeQuery();
			while(rs.next()) {
				JSONObject obj=new JSONObject();
				obj.put("lcode", rs.getString("lcode"));
				obj.put("lname", rs.getString("lname"));
				obj.put("pname", rs.getString("pname"));
				obj.put("room", rs.getString("room"));
				obj.put("hours", rs.getInt("hours"));
				obj.put("capacity", rs.getInt("capacity"));
				obj.put("persons", rs.getInt("persons"));
				String edate=sdf.format(rs.getDate("edate"));
				obj.put("edate",edate);
				array.add(obj);
			}
			
			
		} catch (Exception e) {
			System.out.println("강좌몰고 :"+e.toString());
		}
		
		
		return array;
		
	}

}
