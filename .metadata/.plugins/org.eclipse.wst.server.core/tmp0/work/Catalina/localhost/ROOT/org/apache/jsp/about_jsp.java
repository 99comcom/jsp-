/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-22 00:15:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class about_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<style>\n");
      out.write("#condition{overflow: hidden; border-bottom: 1px solid black; padding-bottom:20px }\r\n");
      out.write("#condition #left{float: left;}\r\n");
      out.write("#condition #right{float: right;}\r\n");
      out.write("#products {overflow: hidden;}\r\n");
      out.write("#products .box{width: 200px; float: left;margin: 10px;padding: 10px;cursor: pointer;}\r\n");
      out.write("\r\n");
      out.write("#products .box .name{font-size: 12px; width: 200px;}\r\n");
      out.write("#products .box img{border: 4px solid rgb(254, 203, 0); border-radius:20px} \r\n");
      out.write("\r\n");
      out.write("#new {overflow: hidden; border: 3px solid #006AA7; margin-top: 10px}\r\n");
      out.write("#new .box{width: 150px; float: left;margin: 10px;padding: 10px;cursor: pointer;}\r\n");
      out.write("#best{overflow: hidden; border: 3px solid #006AA7; margin-top: 10px}\r\n");
      out.write("#best .box{width: 150px; float: left;margin: 10px;padding: 10px;cursor: pointer;}\r\n");
      out.write("h2{border-bottom: 3px solid rgb(254, 203, 0); width: 130px}\r\n");
      out.write(".statue{color: red; font-weight: bold;}\n");
      out.write("</style>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<div id=\"condition\">\r\n");
      out.write("	<form name=\"frm\" id=\"left\">\r\n");
      out.write("		<select id=\"key\">\r\n");
      out.write("			<option value=\"prod_name\">상품명</option>\r\n");
      out.write("			<option value=\"company\">제조사</option>\r\n");
      out.write("			<option value=\"mall_name\">판매처</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" id=\"word\" placeholder=\"검색어\">\r\n");
      out.write("		<button>검색</button>\r\n");
      out.write("		검색수 : <span id=\"total\"></span>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"right\">\r\n");
      out.write("		<select id=\"order\">\r\n");
      out.write("			<option value=\"prod_name\">상품명</option>\r\n");
      out.write("			<option value=\"price1\">상품가격</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<select id=\"desc\">\r\n");
      out.write("			<option value=\"desc\">내림차순</option>\r\n");
      out.write("			<option value=\"asc\">오름차순</option>\r\n");
      out.write("		</select>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"products\" ></div>\r\n");
      out.write("<script id=\"ptemp\" type=\"text/x-handlebars-template\">\r\n");
      out.write("	{{#each array}}\r\n");
      out.write("		<div class=\"box\" onclick=\"location.href='/pro/info?prod_id={{prod_id}}'\">\r\n");
      out.write("			<img src=\"/image/shop/{{image}}\" width=200>\r\n");
      out.write("			<div class=\"name ellipsis\">{{prod_name}}</div>\r\n");
      out.write("			<div class=\"price\">\r\n");
      out.write("				{{fprice}}\r\n");
      out.write("				<span class=\"statue\">{{statue del}}</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("Handlebars.registerHelper(\"statue\", function(del){\r\n");
      out.write("	if(del=='1') return \"판매중지\";\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"buttons\">\r\n");
      out.write("   <button id=\"prev\">이전</button>\r\n");
      out.write("   <span id=\"page\">1/10</span>\r\n");
      out.write("   <button id=\"next\">다음</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2 style=\"margin-top: 50px;\" >최신상품</h2>\r\n");
      out.write("<div id=\"new\"></div>\r\n");
      out.write("<script id=\"ntemp\" type=\"text/x-handlebars-template\">\r\n");
      out.write("	{{#each array}}\r\n");
      out.write("		<div class=\"box\" onclick=\"location.href='/pro/info?prod_id={{prod_id}}'\">\r\n");
      out.write("			<img src=\"/image/shop/{{image}}\" width=150>\r\n");
      out.write("			<div class=\"name ellipsis\">{{prod_name}}</div>\r\n");
      out.write("			<span class=\"statue\">{{statue del}}</span>\r\n");
      out.write("			<div class=\"price\">{{prod_id}} / {{fprice}}</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<h2 style=\"margin-top: 50px;\" >베스트상품</h2>\r\n");
      out.write("<div id=\"best\"></div>\r\n");
      out.write("<script id=\"btemp\" type=\"text/x-handlebars-template\">\r\n");
      out.write("	{{#each array}}\r\n");
      out.write("		<div class=\"box\" onclick=\"location.href='/pro/info?prod_id={{prod_id}}'\">\r\n");
      out.write("			<img src=\"/image/shop/{{image}}\" width=150>\r\n");
      out.write("			<span class=\"statue\">{{statue del}}</span>\r\n");
      out.write("			<div class=\"name ellipsis\">{{prod_name}}</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var page=1;\r\n");
      out.write("getProducts();\r\n");
      out.write("getNew();\r\n");
      out.write("getBest()\r\n");
      out.write("\r\n");
      out.write("$(\"#next\").on(\"click\", function(){\r\n");
      out.write("    page++;\r\n");
      out.write("    getProducts();\r\n");
      out.write(" });\r\n");
      out.write(" \r\n");
      out.write(" $(\"#prev\").on(\"click\", function(){\r\n");
      out.write("    page--;\r\n");
      out.write("    getProducts();\r\n");
      out.write(" });\r\n");
      out.write("\r\n");
      out.write("$(frm).on(\"submit\", function (e) {\r\n");
      out.write("	e.preventDefault();\r\n");
      out.write("	page=1;\r\n");
      out.write("	getProducts();\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("$(\"#order, #desc\").on(\"change\", function(){\r\n");
      out.write("	page=1;\r\n");
      out.write("	getProducts();\r\n");
      out.write("	\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//최신상품목록\r\n");
      out.write("function getNew() {\r\n");
      out.write("	var key=\"prod_id\";\r\n");
      out.write("	var word=\"\"\r\n");
      out.write("	var per=5;\r\n");
      out.write("	var order=\"prod_id\";\r\n");
      out.write("	var desc=$(\"#desc\").val();\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		url:\"/pro/list.json\",\r\n");
      out.write("		data:{key:key, word:word, per:per, order:order, desc:desc, page:1},\r\n");
      out.write("		dataType:\"json\",\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			var temp=Handlebars.compile($(\"#ntemp\").html());\r\n");
      out.write("			$(\"#new\").html(temp(data));\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//베스트품목록\r\n");
      out.write("function getBest() {\r\n");
      out.write("	var key=\"prod_id\";\r\n");
      out.write("	var word=\"\"\r\n");
      out.write("	var per=5;\r\n");
      out.write("	var order=\"price1\";\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		url:\"/pro/list.json\",\r\n");
      out.write("		data:{key:key, word:word, per:per, order:order, desc:\"\", page:1},\r\n");
      out.write("		dataType:\"json\",\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			var temp=Handlebars.compile($(\"#btemp\").html());\r\n");
      out.write("			$(\"#best\").html(temp(data));\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getProducts() {\r\n");
      out.write("	var key=$(\"#key\").val();\r\n");
      out.write("	var word=$(\"#word\").val();\r\n");
      out.write("	var per=8;\r\n");
      out.write("	var order=$(\"#order\").val();\r\n");
      out.write("	var desc=$(\"#desc\").val();\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		url:\"/pro/list.json\",\r\n");
      out.write("		data:{key:key, word:word, per:per, order:order, desc:desc, page:page},\r\n");
      out.write("		dataType:\"json\",\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			var temp=Handlebars.compile($(\"#ptemp\").html());\r\n");
      out.write("			$(\"#products\").html(temp(data));\r\n");
      out.write("			 $(\"#total\").html(data.total);\r\n");
      out.write("			 if(data.total==0){\r\n");
      out.write("	               $(\"#products\").append(\"<div style='text-align:center;padding-top: 30px; font-size:25px; color:red;'> 검색 상품이 존재하지 않습니다. <div>\");\r\n");
      out.write("	               $(\".buttons\").hide();\r\n");
      out.write("			  }else{\r\n");
      out.write("              $(\"#page\").html(page + \"/\" + data.last);\r\n");
      out.write("              \r\n");
      out.write("              if(page==1) $(\"#prev\").attr(\"disabled\", true);\r\n");
      out.write("              else $(\"#prev\").attr(\"disabled\", false);\r\n");
      out.write("              \r\n");
      out.write("              if(page==data.last) $(\"#next\").attr(\"disabled\", true);\r\n");
      out.write("              else $(\"#next\").attr(\"disabled\", false);\r\n");
      out.write("              $(\".buttons\").show();\r\n");
      out.write("           }\r\n");
      out.write("        }\r\n");
      out.write("     })\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
