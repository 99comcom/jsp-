/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-22 00:04:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cou;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<style>\n");
      out.write("	.row {text-align:center;}\n");
      out.write("	.none {text-align:center; color:red;}\n");
      out.write("#condition form{}\n");
      out.write("#condition a{}\n");
      out.write("#tbl{margin-left:2%; margin-right: 2%}\n");
      out.write("\n");
      out.write("</style>    \n");
      out.write("<h1>강좌목록</h1>\n");
      out.write("<div id=\"condition\">\n");
      out.write("   <form name=\"frm\" id=\"frm\">\n");
      out.write("      <select name=\"key\" id=\"key\">\n");
      out.write("         <option value=\"lcode\">강좌번호</option>\n");
      out.write("         <option value=\"lname\">강좌이름</option>\n");
      out.write("         <option value=\"pname\">담당교수</option>\n");
      out.write("      </select>\n");
      out.write("      \n");
      out.write("      <select name=\"per\" id=\"per\">\n");
      out.write("         <option value=\"5\">5행</option>\n");
      out.write("         <option value=\"7\" >7행</option>\n");
      out.write("         <option value=\"10\"selected>10행</option>\n");
      out.write("         <option value=\"15\">15행</option>\n");
      out.write("      </select>\n");
      out.write("      <select name=\"order\" id=\"order\">\n");
      out.write("         <option value=\"lcode\">강좌번호</option>\n");
      out.write("         <option value=lname>강좌이름</option>\n");
      out.write("         <option value=\"pname\">담당교수</option>\n");
      out.write("      </select>\n");
      out.write("      <select name=\"desc\" id=\"desc\">\n");
      out.write("         <option value=\"asc\">오름차순</option>\n");
      out.write("         <option value=\"desc\">내림차순</option>\n");
      out.write("      </select>\n");
      out.write("      <input type=\"text\" name=\"word\" placeholder=\"검색어\">\n");
      out.write("      <button>검색</button>\n");
      out.write("      검색수:<span id=\"total\"></span>\n");
      out.write("      \n");
      out.write("   </form>\n");
      out.write("<a href=\"/cou/insert\"><button>강좌등록</button></a>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("    \n");
      out.write("<table id=\"tbl\"></table>\n");
      out.write("<script id=\"temp\" type=\"text/x-handlebars-template\">\n");
      out.write("   <tr class=\"title\">\n");
      out.write("      <td width=200>강좌번호</td>\n");
      out.write("      <td width=300>강좌이름</td>\n");
      out.write("      <td width=200>담당교수</td>\n");
      out.write("      <td width=150>강의실</td>\n");
      out.write("      <td width=350>수강인원</td>\n");
      out.write("	 <td width=200>강의시수</td>\n");
      out.write("   </tr>\n");
      out.write("   {{#each array}}\n");
      out.write("   <tr class=\"row\" onclick=\"location.href='/cou/read?lcode={{lcode}}'\">\n");
      out.write("      <td class=\"lcode\">{{lcode}}</td>\n");
      out.write("      <td class=\"lcode\">{{lname}}</td>\n");
      out.write("      <td class=\"lcode\">{{pname}}/{{dept}}</td>\n");
      out.write("      <td class=\"lcode\">{{room}}</td>\n");
      out.write("      <td class=\"lcode\">{{persons}}/{{capacity}}</td>\n");
      out.write("	  <td class=\"lcode\">{{hours}}</td>\n");
      out.write("   </tr>\n");
      out.write("   {{/each}}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div class=\"buttons\">\n");
      out.write("   <button id=\"prev\">이전</button>\n");
      out.write("   <span id=\"page\">1/10</span>\n");
      out.write("   <button id=\"next\">다음</button>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("   var page=1;\n");
      out.write("   getList();\n");
      out.write("   \n");
      out.write("   $(frm).on(\"submit\", function(e){\n");
      out.write("      e.preventDefault();\n");
      out.write("      page=1;\n");
      out.write("      getList();\n");
      out.write("   });\n");
      out.write("   \n");
      out.write("   $(\"#key, #per, #order, #desc\").on(\"change\", function(){\n");
      out.write("      page=1;\n");
      out.write("      getList();\n");
      out.write("   });\n");
      out.write("   \n");
      out.write("   $(\"#next\").on(\"click\", function(){\n");
      out.write("      page++;\n");
      out.write("      getList();\n");
      out.write("   });\n");
      out.write("   \n");
      out.write("   $(\"#prev\").on(\"click\", function(){\n");
      out.write("      page--;\n");
      out.write("      getList();\n");
      out.write("   });\n");
      out.write("   \n");
      out.write("   function getList(){\n");
      out.write("      var key=$(frm.key).val();\n");
      out.write("      var word=$(frm.word).val();\n");
      out.write("      var per=$(frm.per).val();\n");
      out.write("      var order=$(frm.order).val();\n");
      out.write("      var desc=$(frm.desc).val();\n");
      out.write("      $.ajax({\n");
      out.write("         type:\"get\",\n");
      out.write("         url:\"/cou/list.json\",\n");
      out.write("         dataType:\"json\",\n");
      out.write("         data:{key:key,word:word,per:per,order:order,desc:desc,page:page},\n");
      out.write("         success:function(data){\n");
      out.write("            //console.log(JSON.stringify(data));\n");
      out.write("            var temp=Handlebars.compile($(\"#temp\").html());\n");
      out.write("            $(\"#tbl\").html(temp(data));\n");
      out.write("            $(\"#total\").html(data.total);\n");
      out.write("            \n");
      out.write("            if(data.total==0){\n");
      out.write("               $(\"#tbl\").append(\"<tr><td colspan=6 class='none'>검색된 강좌가 없습니다!</td></tr>\");\n");
      out.write("               $(\".buttons\").hide();\n");
      out.write("            }else{\n");
      out.write("               $(\"#page\").html(page + \"/\" + data.last);\n");
      out.write("               \n");
      out.write("               if(page==1) $(\"#prev\").attr(\"disabled\", true);\n");
      out.write("               else $(\"#prev\").attr(\"disabled\", false);\n");
      out.write("               \n");
      out.write("               if(page==data.last) $(\"#next\").attr(\"disabled\", true);\n");
      out.write("               else $(\"#next\").attr(\"disabled\", false);\n");
      out.write("               $(\".buttons\").show();\n");
      out.write("            }\n");
      out.write("         }\n");
      out.write("      });\n");
      out.write("   }\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
